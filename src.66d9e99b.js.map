{"version":3,"sources":["js/task_1.js","js/task_2.js","js/task_3.js","index.js"],"names":["delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then","users","name","active","toggleUserState","allUsers","userName","map","user","updatedUsers","table","randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","transaction","reject","id","logSuccess","logError","warn","amount","catch"],"mappings":";AAAA,IAAMA,EAAQ,SAAAC,GACH,OAAA,IAAIC,QAAQ,SAAAC,GAChBC,WAAW,WAAID,OAAAA,EAAQF,IAAKA,MAI7BI,EAAS,SAAAC,GAAQC,OAAAA,QAAQC,IAAsBF,kBAAAA,OAAAA,EAAlC,QAGnBN,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,MAAMS,KAAKJ;;ACMjB,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,KAAA,GAAA,GAAA,OAAA,sBAAA,CAAA,IAAA,EAAA,OAAA,sBAAA,GAAA,IAAA,EAAA,EAAA,OAAA,SAAA,GAAA,OAAA,OAAA,yBAAA,EAAA,GAAA,cAAA,EAAA,KAAA,MAAA,EAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,UAAA,OAAA,IAAA,CAAA,IAAA,EAAA,MAAA,UAAA,GAAA,UAAA,GAAA,GAAA,EAAA,EAAA,EAAA,OAAA,IAAA,GAAA,QAAA,SAAA,GAAA,EAAA,EAAA,EAAA,EAAA,MAAA,OAAA,0BAAA,OAAA,iBAAA,EAAA,OAAA,0BAAA,IAAA,EAAA,OAAA,IAAA,QAAA,SAAA,GAAA,OAAA,eAAA,EAAA,EAAA,OAAA,yBAAA,EAAA,MAAA,OAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EAjBA,IAAMK,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGnBC,EAAkB,SAACC,EAAUC,GACxB,OAAA,IAAIb,QAAQ,SAAAC,GAEfA,EADqBW,EAASE,IAAI,SAAAC,GAAQA,OAAAA,EAAKN,OAASI,EAAgBE,EAAAA,EAAAA,GAAAA,GAA9B,GAAA,CAAoCL,QAASK,EAAKL,SAAWK,QAKzGZ,EAAS,SAAAa,GAAgBX,OAAAA,QAAQY,MAAMD,IAE7CL,EAAgBH,EAAO,SAASD,KAAKJ,GACrCQ,EAAgBH,EAAO,OAAOD,KAAKJ;;ACjBnC,IAAMe,EAA4B,SAACC,EAAKC,GAC/BC,OAAAA,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IAGhDK,EAAkB,SAAAC,GACd3B,IAAAA,EAAQoB,EAA0B,IAAK,KACtC,OAAA,IAAIlB,QAAQ,SAACC,EAASyB,GACVL,KAAKE,SACpBrB,WAAW,WACYmB,KAAKE,SAAW,GAE/BtB,EAAQwB,EAAYE,GAAI7B,GAExB4B,EAAOD,EAAYE,KAE9B7B,MAGC8B,EAAa,SAACD,EAAIvB,GACtBC,QAAQC,IAAmBqB,eAAAA,OAAAA,EAAmBvB,kBAAAA,OAAAA,EAA9C,QAGIyB,EAAW,SAAAF,GACftB,QAAQyB,KAAqCH,gCAAAA,OAAAA,EAA7C,+BAGFH,EAAgB,CAAEG,GAAI,GAAII,OAAQ,MAC/BxB,KAAKqB,GACLI,MAAMH,GAETL,EAAgB,CAAEG,GAAI,GAAII,OAAQ,MAC/BxB,KAAKqB,GACLI,MAAMH,GAETL,EAAgB,CAAEG,GAAI,GAAII,OAAQ,KAC/BxB,KAAKqB,GACLI,MAAMH,GAETL,EAAgB,CAAEG,GAAI,GAAII,OAAQ,MAC/BxB,KAAKqB,GACLI,MAAMH;;ACtCT,aAFA,QAAA,eACA,QAAA,eACA,QAAA","file":"src.66d9e99b.js","sourceRoot":"../src","sourcesContent":["const delay = ms => {\n    return new Promise(resolve => {\n       setTimeout(()=>resolve(ms), ms)\n   })\n }\n\nconst logger = time => console.log(`Resolved after ${time}ms`);\n\n// Вызовы функции для проверки\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms","const users = [\n  { name: 'Mango', active: true },\n  { name: 'Poly', active: false },\n  { name: 'Ajax', active: true },\n  { name: 'Lux', active: false },\n];\n\nconst toggleUserState = (allUsers, userName) => {\n    return new Promise(resolve => {\n        const updatedUsers = allUsers.map(user => user.name === userName ? { ...user, active: !user.active } : user);\n        resolve(updatedUsers);\n    })\n};\n\nconst logger = updatedUsers => console.table(updatedUsers);\n\ntoggleUserState(users, 'Mango').then(logger);\ntoggleUserState(users, 'Lux').then(logger);\n","const randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = transaction => {\n    const delay = randomIntegerFromInterval(200, 500);\n    return new Promise((resolve, reject) => {\n        const passed = Math.random() > 0.5;\n        setTimeout(() => {\n            const canProcess = Math.random() > 0.3;\n            if (canProcess) {\n                resolve(transaction.id, delay);\n            } else {\n                reject(transaction.id);\n            }\n  }, delay);\n    })\n}\nconst logSuccess = (id, time) => {\n  console.log(`Transaction ${id} processed in ${time}ms`);\n};\n\nconst logError = id => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\nmakeTransaction({ id: 70, amount: 150 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 })\n  .then(logSuccess)\n  .catch(logError);","import \"./js/task_1\";\nimport \"./js/task_2\";\nimport \"./js/task_3\""]}